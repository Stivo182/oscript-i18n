#Использовать tokenizer

Перем _ПутьКФайлу; // Строка

// Разбирает файл .properties на пары ключ=значение
//
// Возвращаемое значение:
//   Соответствие
Функция Прочитать() Экспорт

	ЧтениеТекста = Новый ЧтениеТекста(_ПутьКФайлу, КодировкаТекста.UTF8);
	Токенайзер = Новый Токенайзер(Спецификация());
	
	Ресурсы = Новый Соответствие();

	ЭтоПродолженияЗначения = Ложь;
	ПредыдущийКлюч = "";
	Пока Истина Цикл

		Строка = ЧтениеТекста.ПрочитатьСтроку();

		Если Строка = Неопределено Тогда
			Прервать;
		КонецЕсли;

		Если ПустаяСтрока(Строка) Тогда
			Продолжить;
		КонецЕсли;

		Строка = СокрЛ(Строка);
		Токенайзер.Инит(Строка);

		МассивТокенов = Новый Массив();
		ЭкранироватьСимвол = Ложь;
		СледующаяСтрокаПродолжениеЗначения = Ложь;
		Ключ = "";

		Пока Токенайзер.ЕстьЕщеТокены() Цикл

			Токен = Токенайзер.СледующийТокен();
			ТипТокена = Токен.ТипТокена();

			Если Не ЭкранироватьСимвол Тогда
				Если ТипТокена = "Экранирование" Тогда
					Если Токенайзер.ЕстьЕщеТокены() Тогда
						ЭкранироватьСимвол = Истина
					Иначе
						СледующаяСтрокаПродолжениеЗначения = Истина;
					КонецЕсли;
					Продолжить;
				ИначеЕсли ТипТокена = "Комментарий" И Не ЭтоПродолженияЗначения И МассивТокенов.Количество() = 0 Тогда
					Прервать;
				ИначеЕсли ТипТокена = "ПереносСтроки" Тогда
					МассивТокенов.Добавить(Символы.ПС);
					Продолжить;
				ИначеЕсли ТипТокена = "ВозвратКаретки" Тогда
					МассивТокенов.Добавить(Символы.ВК);
					Продолжить;
				ИначеЕсли ТипТокена = "Табуляция" Тогда
					МассивТокенов.Добавить(Символы.Таб);
					Продолжить;
				ИначеЕсли ТипТокена = "Разделитель" И Не ЭтоПродолженияЗначения Тогда
					Ключ = СтрСоединить(МассивТокенов);
					МассивТокенов.Очистить();
					Продолжить;
				КонецЕсли;
			КонецЕсли;

			МассивТокенов.Добавить(Токен.Значение());
			ЭкранироватьСимвол = Ложь;

		КонецЦикла;

		Значение = СтрСоединить(МассивТокенов);
		Если Лев(Значение, 1) = " " Тогда
			Значение = Сред(Значение, 2);
		КонецЕсли;

		Если ЭтоПродолженияЗначения И ЗначениеЗаполнено(Значение) Тогда
			Ресурсы[ПредыдущийКлюч] = Ресурсы[ПредыдущийКлюч] + Значение;
		ИначеЕсли ЗначениеЗаполнено(Ключ) Тогда
			Ключ = СокрЛП(Ключ);
			Ресурсы.Вставить(Ключ, Значение);
			ПредыдущийКлюч = Ключ;
		КонецЕсли;

		ЭтоПродолженияЗначения = СледующаяСтрокаПродолжениеЗначения;

	КонецЦикла;

	ЧтениеТекста.Закрыть();

	Возврат Ресурсы;

КонецФункции

Функция Спецификация()

	Спецификация = Новый Массив();
	Спецификация.Добавить(Новый СпецификацияТокенРегулярноеВыражение(Новый РегулярноеВыражение("[!#]"), "Комментарий")); 
	Спецификация.Добавить(Новый СпецификацияТокенРегулярноеВыражение(Новый РегулярноеВыражение("\\n"), "ПереносСтроки"));
	Спецификация.Добавить(Новый СпецификацияТокенРегулярноеВыражение(Новый РегулярноеВыражение("\\r"), "ВозвратКаретки"));
	Спецификация.Добавить(Новый СпецификацияТокенРегулярноеВыражение(Новый РегулярноеВыражение("\\t"), "Табуляция"));
	Спецификация.Добавить(Новый СпецификацияТокенСимвол("\", "Экранирование"));
	Спецификация.Добавить(Новый СпецификацияТокенРегулярноеВыражение(Новый РегулярноеВыражение("[=:]"), "Разделитель"));
	Спецификация.Добавить(Новый СпецификацияТокенРегулярноеВыражение(Новый РегулярноеВыражение("[^!#=:\\]+"), "ВсёОстальное"));

	Возврат Спецификация;

КонецФункции

Процедура ПриСозданииОбъекта(ПутьКФайлу)

	_ПутьКФайлу = ПутьКФайлу;

КонецПроцедуры