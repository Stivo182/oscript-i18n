#Использовать asserts
#Использовать "../src"

Процедура ПередЗапускомТестов() Экспорт
	МенеджерРесурсовЛокализации.ДобавитьКаталог("tests/РесурсыЛокализации");
КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
	РегиональныеПараметры.УстановитьЛокаль("ru_RU");
	РегиональныеПараметры.УстановитьЛокальПоУмолчанию("en_UK");
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьУстановкуТекущейЛокалиБезСтраны() Экспорт

	РегиональныеПараметры.УстановитьЛокаль("ru");

	Ожидаем.Что(РегиональныеПараметры.ТекущаяЛокаль(), "Локаль").Равно("ru");
	Ожидаем.Что(РегиональныеПараметры.ТекущийЯзык(), "Язык").Равно("ru");
	Ожидаем.Что(РегиональныеПараметры.ТекущаяСтрана(), "Страна").Равно("");

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьУстановкуТекущейЛокалиСоСтраной() Экспорт

	РегиональныеПараметры.УстановитьЛокаль("ru_RU");

	Ожидаем.Что(РегиональныеПараметры.ТекущаяЛокаль(), "Локаль").Равно("ru_RU");
	Ожидаем.Что(РегиональныеПараметры.ТекущийЯзык(), "Язык").Равно("ru");
	Ожидаем.Что(РегиональныеПараметры.ТекущаяСтрана(), "Страна").Равно("RU");

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьУстановкуЛокалиПоУмолчанию() Экспорт

	РегиональныеПараметры.УстановитьЛокальПоУмолчанию("ru");

	Ожидаем.Что(РегиональныеПараметры.ЛокальПоУмолчанию()).Равно("ru");

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьЧтоПакетыЗагружены() Экспорт

	РегиональныеПараметры.УстановитьЛокальПоУмолчанию("");

	Пакеты = Новый Соответствие();
	Пакеты.Вставить("РесурсыЛокализации_", МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализации", ""));
	Пакеты.Вставить("РесурсыЛокализации_ru", МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализации", "ru"));
	Пакеты.Вставить("РесурсыЛокализации_ru_RU", МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализации", "ru_RU"));
	Пакеты.Вставить("РесурсыЛокализации_en_UK", МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализации", "en_UK"));
	Пакеты.Вставить("РесурсыЛокализации_en_US", МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализации", "en_US"));
	Пакеты.Вставить("РесурсыЛокализации_de", МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализации", "de"));

	Пакеты.Вставить("РесурсыЛокализацииКоманд_en", МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализацииКоманд", "en"));
	Пакеты.Вставить("РесурсыЛокализацииКоманд_ru_RU", МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализацииКоманд", "ru_RU"));
	
	Для Каждого Строка Из Пакеты Цикл
		Локаль = Строка.Ключ;
		Пакет = Строка.Значение;
		
		Ожидаем.Что(Пакет, Локаль).Заполнено();
		Ожидаем.Что(Пакет.БазовоеИмя() + "_" + Пакет.Локаль()).Равно(Локаль);
	КонецЦикла;

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПолучениеПакетаТекущейЛокали() Экспорт

	Пакет = МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализации");
	
	Ожидаем.Что(Пакет.Локаль()).Равно("ru_RU");
	Ожидаем.Что(Пакет.Получить("ПолноеИмя")).Равно("РесурсыЛокализации_ru_RU");

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПолучениеПакетаПоЛокалиПоУмолчанию() Экспорт

	Пакет = МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализации", "es_ES");
	
	Ожидаем.Что(Пакет.Локаль()).Равно("en_UK");
	Ожидаем.Что(Пакет.Получить("ПолноеИмя")).Равно("РесурсыЛокализации_en_UK");
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьЧтоПакетСобираетсяТолькоОдинРаз() Экспорт

	Пакет1 = МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализации", "ru");
	Пакет2 = МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализации", "ru");

	Ожидаем.Что(Пакет1).Равно(Пакет2);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПриоритетПакетаХранящегосяВКлассеПередФайлом() Экспорт

	Пакет = МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализации");

	// Полное имя обеих источников совпадает
	Ожидаем.Что(Пакет.Получить("ПолноеИмя")).Равно("РесурсыЛокализации_ru_RU");

	// Присутствует и в классе, и в файле, но взял из класса
	Ожидаем.Что(Пакет.Получить("Приветствие")).Равно("Привет!");

	// Отсутствует в классе, но есть в файле
	Ожидаем.Что(Пакет.Получить("Прощание")).Равно("До свидания"); 

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьНахождениеПакетаПоЯзыкуКогдаПоСтранеНеНайдено() Экспорт

	Пакет = МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализации", "de_DE");

	Ожидаем.Что(Пакет.Получить("ПолноеИмя")).Равно("РесурсыЛокализации_de");

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПолучениеРодительскогоРесурса() Экспорт

	Пакет = МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализации", "ru_RU");

	Ожидаем.Что(Пакет.Получить("ПолноеИмя")).Равно("РесурсыЛокализации_ru_RU");
	Ожидаем.Что(Пакет.Получить("Температура.Обозначение")).Равно("°C");

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПакетыОднойЛокалиНоСРазнымиИменами() Экспорт

	ПакетОсновной = МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализации", "ru_RU");
	ПакетКоманды = МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализацииКоманд", "ru_RU");
	
	Ожидаем.Что(ПакетОсновной.Получить("СохранитьКак")).Не_().Заполнено();
	Ожидаем.Что(ПакетКоманды.Получить("СохранитьКак")).Равно("Сохранить как");

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьГруппуПакетов() Экспорт

	Пакеты = МенеджерРесурсовЛокализации.ПолучитьПакеты("РесурсыЛокализации, РесурсыЛокализацииКоманд", "ru_RU");
	
	Ожидаем.Что(Пакеты.Получить("Приветствие")).Равно("Привет!");
	Ожидаем.Что(Пакеты.Получить("СохранитьКак")).Равно("Сохранить как");

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьЗаменуВТекстеДляПакета() Экспорт

	Пакет = МенеджерРесурсовЛокализации.ПолучитьПакет("РесурсыЛокализацииКоманд", "en");
	
	Текст = "<input type='button' value='{t(Открыть)}' /></br>
	|<input type='button' value='{t(СохранитьКак)}' /></a>";

	Эталон = "<input type='button' value='Open' /></br>
	|<input type='button' value='Save as...' /></a>";

	Пакет.ЗаполнитьШаблон(Текст);

	Ожидаем.Что(Текст).Равно(Эталон);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьЗаменуВТекстеДляГруппыПакетов() Экспорт

	Пакет = МенеджерРесурсовЛокализации.ПолучитьПакеты("РесурсыЛокализации, РесурсыЛокализацииКоманд", "en_UK");
	
	Текст = "{t(Приветствие)}</br>
	|<input type='button' value='{t(Открыть)}' /></br>
	|<input type='button' value='{t(СохранитьКак)}' /></a>";

	Эталон = "Hello</br>
	|<input type='button' value='Open' /></br>
	|<input type='button' value='Save as...' /></a>";

	Пакет.ЗаполнитьШаблон(Текст);

	Ожидаем.Что(Текст).Равно(Эталон);

КонецПроцедуры